import static org.junit.Assert.*;
import javax.swing.JFrame;
import main.LevelLoader;
import main.Main;
import org.junit.BeforeClass;
import org.junit.Test;
import GameStates.GameLoop;
import GameStates.GameStateManager;


public class JUnitGameLoopTest extends JFrame{
	private static final long serialVersionUID = 1L;
	private GameLoop gl;
	private static GameStateManager gsm;
	
	public JUnitGameLoopTest() {
		//JFrame
		add(gl = new GameLoop(Main.width, Main.height));
		setTitle("JUNIT");
		setSize(Main.width, Main.height);
		setLocationRelativeTo(null);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setResizable(false);
		setVisible(true);

	}

	
	@BeforeClass
	public static void initialize(){
	
	}
	
	@Test
	public void testAddNotify() {
		assertNotNull(gl.thread);
	}

	@Test
	public void testGameLoop() {
		assertEquals(Main.width, gl.width);
		assertEquals(Main.height, gl.height);
	}

	@Test
	public void testRun() {
		//sleepy
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		assertEquals(60, gl.fps, 5);
	}
	@Test
	public void testInit() {
		assertNotNull(gl.off_screen_gr_img);
		assertEquals(true, gl.running);
		
		gsm = new GameStateManager();
		gsm.init();
		GameStateManager.states.push(new LevelLoader(gsm));

	}

	@Test
	public void testUpdate() {
		gl.update();
	}

	@Test
	public void testRender() {
		fail("Not yet implemented");
	}

	@Test
	public void testDrawImage() {
		fail("Not yet implemented");
	}

}
